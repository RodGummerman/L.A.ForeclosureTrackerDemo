<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/17/2023 9:41:35 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RODDEV"
  DTS:CreatorName="RODDEV\Rod"
  DTS:DTSID="{92E1819C-558B-44AE-A458-3E2669A26752}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5209.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadRawData"
  DTS:PackageType="5"
  DTS:VersionBuild="19"
  DTS:VersionGUID="{6CE1638A-EAE6-4F0F-8E46-A86EA168395F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CFA6E9AC-CE34-4C67-A38A-63C0FA784F6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RawDataFilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\L.A.ForeclosureTrackerDemo\RawData</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Raw Data"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7A48634A-DEEF-41B2-A73B-AC676A9AFA80}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Raw Data"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_07e8c996ba96416f91b2b304afb84497"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::RawDataFilePath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Settings.get_Default():ST_07e8c996ba96416f91b2b304afb84497.Properties.Sett" +
    "ings")]

namespace ST_07e8c996ba96416f91b2b304afb84497.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.Data.Sql;
using System.Data.SqlClient;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_07e8c996ba96416f91b2b304afb84497
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// </summary>
        public void Main()
		{
            try
            {
                Int32 cntr = 0;
                string dataFilePath = Dts.Variables["User::RawDataFilepath"].Value.ToString();
                string[] dataFiles = Directory.GetFiles(dataFilePath, "*.csv");
                string dataLine = string.Empty;
                string query = string.Empty;
                SqlConnection conn = new SqlConnection();
                TblCityCouncilDistricts tblCityCouncilDistricts = new TblCityCouncilDistricts();
                TblLenders tblLenders = new TblLenders();
                TblProperties tblProperties = new TblProperties();
                TblPropertyManagementCompanies tblPropertyManagementCompanies = new TblPropertyManagementCompanies();
                TblPropertyTypes tblPropertyTypes = new TblPropertyTypes();

                conn = (SqlConnection)(Dts.Connections["DBConnection"].AcquireConnection(Dts.Transaction) as SqlConnection);

                //Read data from table or view to data table                       
                foreach (string dataFileName in dataFiles)
                {
                    System.IO.StreamReader SourceFile = new System.IO.StreamReader(dataFileName);
                    cntr = 0;
                    while ((dataLine = SourceFile.ReadLine()) != null)
                    {
                        if (cntr != 0)
                        {
                            dataLine = dataLine.Trim();

                            LoadTableObjects(dataLine, 
                                tblCityCouncilDistricts, 
                                tblLenders, 
                                tblProperties, 
                                tblPropertyManagementCompanies, 
                                tblPropertyTypes);



                            //query = "Insert into SSIS_FileData.dbo." + TableName + " values('" + dataLine.Replace(",", "','").Replace("   ", "','") + "')";
                            SqlCommand SQLCommand = new SqlCommand(query, conn);
                            SQLCommand.ExecuteNonQuery();
                            //MessageBox.Show(query);
                        }
                        cntr++;
                    }
                }
                Dts.TaskResult = (int)ScriptResults.Success;
                conn.Close();
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Exception from Script Task", ex.Message + "\r" + ex.StackTrace, String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        private void LoadTableObjects(string dataLine, 
            TblCityCouncilDistricts tblCityCouncilDistricts, 
            TblLenders tblLenders, 
            TblProperties tblProperties, 
            TblPropertyManagementCompanies tblPropertyManagementCompanies, 
            TblPropertyTypes tblPropertyTypes)
        {
            string[] dataColumns = dataLine.Split(new char[] { ',' });

            tblProperties.PropertyAssessorParcelNumber = dataColumns[0].Trim();
            tblProperties.PropertyForeclosureRegisteredDate = dataColumns[1].Trim();

            tblPropertyTypes.PropertyTypeDescription = dataColumns[2].Trim();

            tblProperties.PropertyStreetAddress = dataColumns[3].Trim();
            tblProperties.PropertyCity = dataColumns[4].Trim();
            tblProperties.PropertyState = dataColumns[5].Trim();
            tblProperties.PropertyZipCode = dataColumns[6].Trim();

            tblCityCouncilDistricts.CityCouncilDistrictID = Convert.ToInt32(dataColumns[7].Trim());

            tblLenders.LenderName = dataColumns[8].Trim();
            tblLenders.LenderContact = dataColumns[9].Trim();
            tblLenders.LenderContactPhone = dataColumns[10].Trim();

            tblPropertyManagementCompanies.PropertyManagementCompanyName = dataColumns[11].Trim();
            tblPropertyManagementCompanies.PropertyManagementCompanyContact = dataColumns[12].Trim();
            tblPropertyManagementCompanies.PropertyManagementCompanyAddress = dataColumns[13].Trim();
            tblPropertyManagementCompanies.PropertyManagementCompanyContactPhone = dataColumns[14].Trim();

            tblProperties.PropertyLongitude = dataColumns[15].Trim();
            tblProperties.PropertyLatitude = dataColumns[16].Trim();
            tblProperties.PropertyPointOnMap = dataColumns[17].Trim();
        }

    }

    public class TblCityCouncilDistricts 
    {
        public int CityCouncilDistrictID = 0;
        public string CityCouncilDistrictName = string.Empty;
    }

    public class TblLenders
    {
        public int LenderID = 0;
        public string LenderName = string.Empty;
        public string LenderContact = string.Empty;
        public string LenderContactPhone = string.Empty;
    }

    public class TblProperties
    {
        public int PropertyID = 0;
        public string PropertyAssessorParcelNumber = string.Empty;
        public int PropertyTypeID = 0;
        public string PropertyStreetAddress = string.Empty;
        public string PropertyCity = string.Empty;
        public string PropertyState = string.Empty;
        public string PropertyZipCode = string.Empty;
        public string PropertyLongitude = string.Empty;
        public string PropertyLatitude = string.Empty;
        public string PropertyPointOnMap = string.Empty;
        public int CityCouncilDistrictID = 0;
        public string PropertyForeclosureRegisteredDate = string.Empty;
        public int LenderID = 0;
        public int PropertyManagementCompanyID = 0;
    }

    public class TblPropertyManagementCompanies
    {
        public int PropertyManagementCompanyID = 0;
        public string PropertyManagementCompanyName = string.Empty;
        public string PropertyManagementCompanyContact = string.Empty;
        public string PropertyManagementCompanyContactPhone = string.Empty;
        public string PropertyManagementCompanyAddress = string.Empty;
    }

    public class TblPropertyTypes
    {
        public int PropertyTypeID = 0;
        public string PropertyTypeDescription = string.Empty;
    }

}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_07e8c996ba96416f91b2b304afb84497.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_07e8c996ba96416f91b2b304afb84497</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_07e8c996ba96416f91b2b304afb84497</msb:DisplayName>
    <msb:ProjectId>{E279ACC1-801C-4F08-A257-C5A63139FFEE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_07e8c996ba96416f91b2b304afb84497.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_07e8c996ba96416f91b2b304afb84497")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_07e8c996ba96416f91b2b304afb84497")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_07e8c996ba96416f91b2b304afb84497.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D750A3DE-BE81-4703-BC2A-4C0E2DFD3870}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_07e8c996ba96416f91b2b304afb84497</RootNamespace>
    <AssemblyName>ST_07e8c996ba96416f91b2b304afb84497</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_07e8c996ba96416f91b2b304afb84497.dll">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
BgChALEGBgDBALEGFQDRALEGBgBxAIQINADZAN0HOQDhADUFPgDpAGoERACZAJQESADxAOsHTAD5
AJYJUwB5ALEGBgDZAB8IVgABATUFXADZAJAFRAAJAb8FYwCBALEGEAD5AEUFSAARAbEGaAAZAW8J
bwAhAdsBSADZADUJAQApAYYCBgDZANsIcwCJADgBSACJAOYASAD5AOYIeQAxAacGgAD5ACMJjgBB
AQEAlQBxALEGBgCZALEGBgBJAV8BmgBJAWIJowCpALEGqQDJALEGBgAIAIAAwwAIAIQAyAApAHMA
PwEuAAsAFwEuABMAIAEuABsAPwEuACMASAEuACsAcQEuADMAcQEuADsAcQEuAEMASAEuAEsAdwEu
AFMAcQEuAFsAjgFDAGMAyABJAHMAPwEDAWsAyADBA3sAyAAbAIkACAABAAkAAwAAAHEGCAEAAEoC
DQEAAC0JEgECAAoAAwACAAsABQABAAwABQACAA0ABwAEgAAAAQAAAGohXF0AAAAAAAAJAAAABAAA
AAAAAAAAAAAAsQDIAAAAAAAQAAAAAAAAAAAAAAC6AJ0EAAAAAAQAAAAAAAAAAAAAALEAvAAAAAAA
BAAAAAAAAAAAAAAAsQA+BQAAAAAQAAAAAAAAAAAAAAC6AJUAAAAAAAAAAAABAAAAAgcAAAoAAgAA
AAAAAFRvSW50MzIAU1RfMDdlOGM5OTZiYTk2NDE2ZjkxYjJiMzA0YWZiODQ0OTcAPE1vZHVsZT4A
UHJvcGVydHlUeXBlSUQATGVuZGVySUQAQ2l0eUNvdW5jaWxEaXN0cmljdElEAFByb3BlcnR5TWFu
YWdlbWVudENvbXBhbnlJRABQcm9wZXJ0eUlEAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVy
Lk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBEYkNvbW1hbmQAU3FsQ29t
bWFuZABnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAUHJvcGVydHlaaXBDb2RlAFByb3Bl
cnR5TG9uZ2l0dWRlAFByb3BlcnR5TGF0aXR1ZGUAZ2V0X01lc3NhZ2UAVmFyaWFibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATGVuZGVyTmFtZQBDaXR5Q291bmNpbERpc3Ry
aWN0TmFtZQBQcm9wZXJ0eU1hbmFnZW1lbnRDb21wYW55TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAGRhdGFMaW5lAFJlYWRMaW5lAExlbmRlckNvbnRhY3RQaG9uZQBQcm9wZXJ0
eU1hbmFnZW1lbnRDb21wYW55Q29udGFjdFBob25lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAFByb3BlcnR5Rm9yZWNsb3N1cmVSZWdpc3RlcmVk
RGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBQcm9wZXJ0eVN0YXRlAENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25m
aWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2Vt
Ymx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFs
dWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMDdlOGM5OTZiYTk2
NDE2ZjkxYjJiMzA0YWZiODQ0OTcuZGxsAGdldF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3Vy
Y2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGJDb25uZWN0aW9uAEFjcXVpcmVD
b25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFByb3BlcnR5VHlwZURlc2NyaXB0aW9u
AFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBQcm9wZXJ0eVBvaW50T25NYXAAQ2hhcgBQ
cm9wZXJ0eUFzc2Vzc29yUGFyY2VsTnVtYmVyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9S
ZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJl
RXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMDdlOGM5OTZiYTk2NDE2ZjkxYjJiMzA0
YWZiODQ0OTcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFRi
bFByb3BlcnR5TWFuYWdlbWVudENvbXBhbmllcwB0YmxQcm9wZXJ0eU1hbmFnZW1lbnRDb21wYW5p
ZXMAU1RfMDdlOGM5OTZiYTk2NDE2ZjkxYjJiMzA0YWZiODQ0OTcuUHJvcGVydGllcwBUYmxQcm9w
ZXJ0aWVzAHRibFByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBUYmxQcm9wZXJ0eVR5
cGVzAHRibFByb3BlcnR5VHlwZXMAU2V0dGluZ3MAZ2V0X0Nvbm5lY3Rpb25zAFRibExlbmRlcnMA
dGJsTGVuZGVycwBTdWNjZXNzAFByb3BlcnR5U3RyZWV0QWRkcmVzcwBQcm9wZXJ0eU1hbmFnZW1l
bnRDb21wYW55QWRkcmVzcwBnZXRfRHRzAExvYWRUYWJsZU9iamVjdHMAVGJsQ2l0eUNvdW5jaWxE
aXN0cmljdHMAdGJsQ2l0eUNvdW5jaWxEaXN0cmljdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRz
AENvbmNhdABMZW5kZXJDb250YWN0AFByb3BlcnR5TWFuYWdlbWVudENvbXBhbnlDb250YWN0AE9i
amVjdABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGll
bnQAQ29udmVydABnZXRfQXNzZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AERpcmVjdG9yeQBQcm9wZXJ0
eUNpdHkARW1wdHkAACtVAHMAZQByADoAOgBSAGEAdwBEAGEAdABhAEYAaQBsAGUAcABhAHQAaAAA
CyoALgBjAHMAdgAAGUQAQgBDAG8AbgBuAGUAYwB0AGkAbwBuAAA1RQB4AGMAZQBwAHQAaQBvAG4A
IABmAHIAbwBtACAAUwBjAHIAaQBwAHQAIABUAGEAcwBrAAADDQAAcVMAVABfADAANwBlADgAYwA5
ADkANgBiAGEAOQA2ADQAMQA2AGYAOQAxAGIAMgBiADMAMAA0AGEAZgBiADgANAA0ADkANwAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAByjvcBv8NhNtJO2tQbdUSkA
BCABAQgDIAABBSABARERBCABAQ4FIAEBEV0YBw0IDg4SPRIMEhASFBIYEhwdDggSQRJFBCAAEm0E
IAAScQUgARJ1HAMgABwDIAAOBgACHQ4ODgIGDgUgABKAgQYgARKAhRwEIAEcHAYgAgEOEj0DIAAI
BSAAEoCZBgADDg4ODgggBQIIDg4OCAQHAR0OBiABHQ4dAwQAAQgOCAABEoClEYCpBSAAEoCtByAC
AQ4SgK0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAgYIAwYSVQMGElkDBhIkAwYRKA4gBgEO
EgwSEBIUEhgSHAQAABJVBAAAElkFAAEBElkEAAASJAMAAAEECAASVQQIABJZBAgAEiQIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzA3ZThjOTk2
YmE5NjQxNmY5MWIyYjMwNGFmYjg0NDk3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABg4AAAAAAAAAAAAADI4AAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAkOAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAXF1qIQAAAQBcXWohPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwAwADcAZQA4AGMAOQA5ADYAYgBhADkANgA0ADEANgBmADkAMQBiADIAYgAzADAANABhAGYA
YgA4ADQANAA5ADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA1
ADUANAAuADIAMwA5ADAAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwAwADcAZQA4AGMAOQA5ADYAYgBhADkANgA0ADEANgBmADkAMQBiADIAYgAzADAANABhAGYAYgA4
ADQANAA5ADcALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADAANwBlADgAYwA5ADkANgBiAGEAOQA2ADQAMQA2AGYAOQAxAGIAMgBiADMAMAA0
AGEAZgBiADgANAA0ADkANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwAwADcAZQA4AGMAOQA5ADYAYgBhADkANgA0ADEANgBmADkAMQBiADIAYgAzADAANABh
AGYAYgA4ADQANAA5ADcAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADgANQA1ADQALgAyADMAOQAwADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADgANQA1ADQALgAyADMAOQAwADAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAARDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="149.6,41.6"
          Id="Package\Load Raw Data"
          TopLeft="25.8333319218623,25.9999998191993" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>