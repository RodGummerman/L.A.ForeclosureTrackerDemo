<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/17/2023 9:41:35 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RODDEV"
  DTS:CreatorName="RODDEV\Rod"
  DTS:DTSID="{92E1819C-558B-44AE-A458-3E2669A26752}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5209.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadRawData"
  DTS:PackageType="5"
  DTS:VersionBuild="30"
  DTS:VersionGUID="{A5B06E4A-A6C5-4435-A291-646F02603E27}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CFA6E9AC-CE34-4C67-A38A-63C0FA784F6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RawDataFilePath">
      <DTS:VariableValue
        DTS:DataType="8">D:\L.A.ForeclosureTrackerDemo\RawData</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load Raw Data"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7A48634A-DEEF-41B2-A73B-AC676A9AFA80}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Raw Data"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_07e8c996ba96416f91b2b304afb84497"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::RawDataFilePath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Settings.get_Default():ST_07e8c996ba96416f91b2b304afb84497.Properties.Sett" +
    "ings")]

namespace ST_07e8c996ba96416f91b2b304afb84497.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.Data.Sql;
using System.Data.SqlClient;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_07e8c996ba96416f91b2b304afb84497
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        private enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

        #region Class variables
        private string sql = string.Empty;
        private SqlConnection conn = new SqlConnection();
        private SqlCommand sqlCommand = null;
        private SqlTransaction sqlTran = null;
        private string currentDataFileName = "<No File Yet>";
        #endregion

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// </summary>
        public void Main()
		{
            try
            {
                Int32 cntr = 0;
                string dataFilePath = Dts.Variables["User::RawDataFilePath"].Value.ToString();
                string[] dataFiles = Directory.GetFiles(dataFilePath, "*.csv");
                string dataLine = string.Empty;
                TblCityCouncilDistricts tblCityCouncilDistricts = new TblCityCouncilDistricts();
                TblLenders tblLenders = new TblLenders();
                TblProperties tblProperties = new TblProperties();
                TblPropertyManagementCompanies tblPropertyManagementCompanies = new TblPropertyManagementCompanies();
                TblPropertyTypes tblPropertyTypes = new TblPropertyTypes();

                conn = (SqlConnection)(Dts.Connections["RODDEV_RODDEVSQLSERVER.L.A.ForeclosureTrackerDemoDB"].AcquireConnection(Dts.Transaction) as SqlConnection);

                //Read data from table or view to data table                       
                foreach (string dataFileName in dataFiles)
                {
                    currentDataFileName = dataFileName;

                    sqlTran = conn.BeginTransaction();

                    System.IO.StreamReader SourceFile = new System.IO.StreamReader(dataFileName);
                    cntr = 0;
                    while ((dataLine = SourceFile.ReadLine()) != null)
                    {
                        if (cntr != 0)
                        {
                            dataLine = dataLine.Trim();

                            LoadTableObjects(dataLine, 
                                tblCityCouncilDistricts,
                                tblPropertyTypes,
                                tblLenders,
                                tblPropertyManagementCompanies,
                                tblProperties);

                            CheckCityCouncilDistrict(tblCityCouncilDistricts);

                            tblProperties.CityCouncilDistrictID = tblCityCouncilDistricts.CityCouncilDistrictID;

                            CheckPropertyType(tblPropertyTypes);

                            tblProperties.PropertyTypeID = tblPropertyTypes.PropertyTypeID;

                            CheckLender(tblLenders);

                            tblProperties.LenderID = tblLenders.LenderID;

                            CheckPropertyManagementCompany(tblPropertyManagementCompanies);

                            tblProperties.PropertyManagementCompanyID = tblPropertyManagementCompanies.PropertyManagementCompanyID;

                            sql = "EXEC spInsertTblProperties(" + 
                                "@PropertyAssessorParcelNumber, " +
                                "@PropertyTypeID, " +
                                "@PropertyStreetAddress, " +
                                "@PropertyCity, " +
                                "@PropertyState, " + 
                                "@PropertyZipCode, " +
                                "@PropertyLongitude, " +
                                "@PropertyLatitude, " +
                                "@PropertyPointOnMap, " +
                                "@CityCouncilDistrictID, " +
                                "@PropertyForeclosureRegisteredDate, " +
                                "@LenderID, " +
                                "@PropertyManagementCompanyID, " +
                                "@PropertyID OUTPUT);";

                            sqlCommand = new SqlCommand(sql, conn, sqlTran);

                            sqlCommand.Parameters.AddWithValue("@PropertyAssessorParcelNumber", tblProperties.PropertyAssessorParcelNumber);
                            sqlCommand.Parameters.AddWithValue("@PropertyTypeID", tblProperties.PropertyTypeID);
                            sqlCommand.Parameters.AddWithValue("@PropertyStreetAddress", tblProperties.PropertyStreetAddress);
                            sqlCommand.Parameters.AddWithValue("@PropertyCity", tblProperties.PropertyCity);
                            sqlCommand.Parameters.AddWithValue("@PropertyState", tblProperties.PropertyState);
                            sqlCommand.Parameters.AddWithValue("@PropertyZipCode", tblProperties.PropertyZipCode);
                            sqlCommand.Parameters.AddWithValue("@PropertyLongitude", tblProperties.PropertyLongitude);
                            sqlCommand.Parameters.AddWithValue("@PropertyLatitude", tblProperties.PropertyLatitude);
                            sqlCommand.Parameters.AddWithValue("@PropertyPointOnMap", tblProperties.PropertyPointOnMap);
                            sqlCommand.Parameters.AddWithValue("@CityCouncilDistrictID", tblProperties.CityCouncilDistrictID);
                            sqlCommand.Parameters.AddWithValue("@PropertyForeclosureRegisteredDate", tblProperties.PropertyForeclosureRegisteredDate);
                            sqlCommand.Parameters.AddWithValue("@LenderID", tblProperties.LenderID);
                            sqlCommand.Parameters.AddWithValue("@PropertyManagementCompanyID", tblProperties.PropertyManagementCompanyID);
                            sqlCommand.Parameters.AddWithValue("@PropertyID", tblProperties.PropertyID);
                            sqlCommand.Parameters[sqlCommand.Parameters.Count - 1].Direction = ParameterDirection.Output;   

                            sqlCommand.ExecuteNonQuery();
                        }
                        cntr++;
                    }

                    sqlTran.Commit();
                    sqlTran = null;
                }
                Dts.TaskResult = (int)ScriptResults.Success;
                conn.Close();
            }
            catch (Exception ex)
            {
                if (sqlTran != null) 
                { 
                    sqlTran.Rollback(); 
                }

                Dts.Events.FireError(0, "Exception from Script Task Processing " + currentDataFileName, ex.Message + "\r" + ex.StackTrace, String.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        private void LoadTableObjects(string dataLine,
            TblCityCouncilDistricts tblCityCouncilDistricts,
            TblPropertyTypes tblPropertyTypes,
            TblLenders tblLenders,
            TblPropertyManagementCompanies tblPropertyManagementCompanies,
            TblProperties tblProperties)
        {
            string[] dataColumns = dataLine.Split(new char[] { ',' });

            tblProperties.PropertyAssessorParcelNumber = dataColumns[0].Trim();
            tblProperties.PropertyForeclosureRegisteredDate = dataColumns[1].Trim();

            tblPropertyTypes.PropertyTypeDescription = dataColumns[2].Trim();

            tblProperties.PropertyStreetAddress = dataColumns[3].Trim();
            tblProperties.PropertyCity = dataColumns[4].Trim();
            tblProperties.PropertyState = dataColumns[5].Trim();
            tblProperties.PropertyZipCode = dataColumns[6].Trim();

            tblCityCouncilDistricts.CityCouncilDistrictID = Convert.ToInt32(dataColumns[7].Trim());

            tblLenders.LenderName = dataColumns[8].Trim();
            tblLenders.LenderContact = dataColumns[9].Trim();
            tblLenders.LenderContactPhone = dataColumns[10].Trim();

            tblPropertyManagementCompanies.PropertyManagementCompanyName = dataColumns[11].Trim();
            tblPropertyManagementCompanies.PropertyManagementCompanyContact = dataColumns[12].Trim();
            tblPropertyManagementCompanies.PropertyManagementCompanyAddress = dataColumns[13].Trim();
            tblPropertyManagementCompanies.PropertyManagementCompanyContactPhone = dataColumns[14].Trim();

            tblProperties.PropertyLongitude = dataColumns[15].Trim();
            tblProperties.PropertyLatitude = dataColumns[16].Trim();
            tblProperties.PropertyPointOnMap = dataColumns[17].Trim();
        }

        private void CheckCityCouncilDistrict(TblCityCouncilDistricts tblCityCouncilDistricts)
        {
            sql = "EXEC spGetOrCreateIDForTblCityCouncilDistricts(" +
                "@CityCouncilDistrictID, " +
                "@CityCouncilDistrictName);";

            sqlCommand = new SqlCommand(sql, conn, sqlTran);

            sqlCommand.Parameters.AddWithValue("@CityCouncilDistrictID", tblCityCouncilDistricts.CityCouncilDistrictID);
            sqlCommand.Parameters.AddWithValue("@CityCouncilDistrictName", tblCityCouncilDistricts.CityCouncilDistrictName);

            sqlCommand.ExecuteNonQuery();
        }

        private void CheckPropertyType(TblPropertyTypes tblPropertyTypes)
        {
            sql = "EXEC spGetOrCreateIDForTblPropertyTypes(" +
                "@PropertyTypeDescription, " +
                "@PropertyTypeID OUTPUT);";

            sqlCommand = new SqlCommand(sql, conn, sqlTran);

            sqlCommand.Parameters.AddWithValue("@PropertyTypeDescription", tblPropertyTypes.PropertyTypeDescription);
            sqlCommand.Parameters.AddWithValue("@PropertyTypeID", tblPropertyTypes.PropertyTypeID);
            sqlCommand.Parameters[sqlCommand.Parameters.Count - 1].Direction = ParameterDirection.Output; 

            sqlCommand.ExecuteNonQuery();
        }

        private void CheckLender(TblLenders tblLenders)
        {
            sql = "EXEC spGetOrCreateIDForTblLenders(" +
                "@LenderName, " +
                "@LenderContact, " +
                "@LenderContactPhone, " +
                "@LenderID OUTPUT);";

            sqlCommand = new SqlCommand(sql, conn, sqlTran);

            sqlCommand.Parameters.AddWithValue("@LenderName", tblLenders.LenderName);
            sqlCommand.Parameters.AddWithValue("@LenderContact", tblLenders.LenderContact);
            sqlCommand.Parameters.AddWithValue("@LenderContactPhone", tblLenders.LenderContactPhone);
            sqlCommand.Parameters.AddWithValue("@PropertyTypeID", tblLenders.LenderID);
            sqlCommand.Parameters[sqlCommand.Parameters.Count - 1].Direction = ParameterDirection.Output;

            sqlCommand.ExecuteNonQuery();
        }

        private void CheckPropertyManagementCompany(TblPropertyManagementCompanies tblPropertyManagementCompanies)
        {
            sql = "EXEC spGetOrCreateIDForTblPropertyManagementCompanies(" +
                "@PropertyManagementCompanyName, " +
                "@LenderContact, " +
                "@LenderContactPhone, " +
                "@PropertyManagementCompanyID OUTPUT);";

            sqlCommand = new SqlCommand(sql, conn, sqlTran);

            sqlCommand.Parameters.AddWithValue("@PropertyManagementCompanyName", tblPropertyManagementCompanies.PropertyManagementCompanyName);
            sqlCommand.Parameters.AddWithValue("@PropertyManagementCompanyContact", tblPropertyManagementCompanies.PropertyManagementCompanyContact);
            sqlCommand.Parameters.AddWithValue("@PropertyManagementCompanyContactPhone", tblPropertyManagementCompanies.PropertyManagementCompanyContactPhone);
            sqlCommand.Parameters.AddWithValue("@PropertyManagementCompanyContactPhone", tblPropertyManagementCompanies.PropertyManagementCompanyContactPhone);
            sqlCommand.Parameters.AddWithValue("@PropertyManagementCompanyAddress", tblPropertyManagementCompanies.PropertyManagementCompanyAddress);
            sqlCommand.Parameters[sqlCommand.Parameters.Count - 1].Direction = ParameterDirection.Output;

            sqlCommand.ExecuteNonQuery();
        }

        #region Internal classes representing DB table rows
        private class TblCityCouncilDistricts
        {
            public int CityCouncilDistrictID = 0;
            public string CityCouncilDistrictName = string.Empty;
        }

        private class TblLenders
        {
            public int LenderID = 0;
            public string LenderName = string.Empty;
            public string LenderContact = string.Empty;
            public string LenderContactPhone = string.Empty;
        }

        private class TblProperties
        {
            public int PropertyID = 0;
            public string PropertyAssessorParcelNumber = string.Empty;
            public int PropertyTypeID = 0;
            public string PropertyStreetAddress = string.Empty;
            public string PropertyCity = string.Empty;
            public string PropertyState = string.Empty;
            public string PropertyZipCode = string.Empty;
            public string PropertyLongitude = string.Empty;
            public string PropertyLatitude = string.Empty;
            public string PropertyPointOnMap = string.Empty;
            public int CityCouncilDistrictID = 0;
            public string PropertyForeclosureRegisteredDate = string.Empty;
            public int LenderID = 0;
            public int PropertyManagementCompanyID = 0;
        }

        private class TblPropertyManagementCompanies
        {
            public int PropertyManagementCompanyID = 0;
            public string PropertyManagementCompanyName = string.Empty;
            public string PropertyManagementCompanyContact = string.Empty;
            public string PropertyManagementCompanyContactPhone = string.Empty;
            public string PropertyManagementCompanyAddress = string.Empty;
        }

        private class TblPropertyTypes
        {
            public int PropertyTypeID = 0;
            public string PropertyTypeDescription = string.Empty;
        }
        #endregion
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_07e8c996ba96416f91b2b304afb84497.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_07e8c996ba96416f91b2b304afb84497.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_07e8c996ba96416f91b2b304afb84497</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_07e8c996ba96416f91b2b304afb84497</msb:DisplayName>
    <msb:ProjectId>{4CDCCFC2-3591-422B-A237-5E0150FB76B9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_07e8c996ba96416f91b2b304afb84497.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="99c96a0fe96b4f86bbb2100f9b8fb83c">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>51</msb:LineNumber>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="ed9febe7f6d7486990e37120a14b1114">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>17</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>41</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_07e8c996ba96416f91b2b304afb84497")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_07e8c996ba96416f91b2b304afb84497")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_07e8c996ba96416f91b2b304afb84497.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D750A3DE-BE81-4703-BC2A-4C0E2DFD3870}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_07e8c996ba96416f91b2b304afb84497</RootNamespace>
    <AssemblyName>ST_07e8c996ba96416f91b2b304afb84497</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_07e8c996ba96416f91b2b304afb84497.dll">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
AAAQAOwHhghVAAYACAAAARAACgmGCG0ACAAMAAMBAADQCQAAUQAJAA8AAwAQAKAJAABVAAwADwAD
ABAAIwkAAFUADgAQAAMAEAC1CAAAVQASABEAAwAQAEgIAABVACAAEgADABAA6AgAAFUAJQATAAEA
dwVRAAEAtAX0AAEA5gD4AAEAoQX8AAEAfAFRABEAlQUAAREAbgIEAREAAAEIAQYGtAAMAVaASAkP
AVaATgIPAQYATgAMAQYAmwFRAAYARQAMAQYAkAFRAAYA8AlRAAYAAwJRAAYAgAAMAQYABwdRAAYA
NgAMAQYAUAlRAAYA1QpRAAYA7wJRAAYAEAFRAAYAIAFRAAYAMgFRAAYA7wZRAAYATgAMAQYAuAJR
AAYARQAMAQYAZAAMAQYAZAAMAQYAswFRAAYA/glRAAYAFgJRAAYAZglRAAYANgAMAQYAuAZRAFAg
AAAAAIYArwUGAAEAZCQAAAAAgQCPCRMBAQCgJQAAAACBACYKIgEHACAmAAAAAIEAPAIoAQgAyCYA
AAAAgQA8By4BCQCoJwAAAACBAJwKNAEKAJ0oAAAAAIYYpQcGAAsAxigAAAAAgxilBwYACwDOKAAA
AACTCEgHOgELAPooAAAAAJMIVgI/AQsAASkAAAAAkwhiAkQBCwAJKQAAAACWCEwKSgEMABApAAAA
AIYYpQcGAAwAGCkAAAAAkRirB08BDAAkKQAAAACGGKUHBgAMADcpAAAAAIYYpQcGAAwAYCkAAAAA
hhilBwYADADWKQAAAACGGKUHBgAMAAoqAAAAAIYYpQcGAAwAAAABAPEBAAACALgJAAADAPkIAAAE
AC4JAAAFAGcIAAAGAMMIAAABALgJAAABAPkIAAABAC4JAAABAGcIAAABAK0ECQClBwEAEQClBwYA
GQClBwoAKQClBxAAMQClBxAAOQClBxAAQQClBxAASQClBxAAUQClBxAAWQClBxAAYQClBxAAaQCl
BwYAsQClBwYA0QClBxUA4QClBwYAcQCHCTIA6QDRCDcA8QB7BTwA+QCWBEIAqQDNBEYAAQHfCEoA
CQHiClEA6QATCVQAEQF7BVoA6QDjBUIAGQFtBmEAeQAQBmYAkQClBxAACQGLBUYAgQClB2sAgQA5
CXQAIQGgBHoAOQF9CoIAIQF7BYYAQQGNBo0AUQG7CoIAWQH6AUYAYQFFCgYA6QBYCgEAaQGyAgYA
YQHWBAYA6QDeCZQACQHpCZoAmQBDAUYAmQDxAEYACQHpCaAAcQGbB6cACQE/CrUAgQEBALwAeQCl
BwYAcQClBwYAqQClBwYAiQFqAcEAiQGPCsoAuQClB9AA2QClBwYACAAoAOoACAAsAO8AKQBzAIoB
LgALAGIBLgATAGsBLgAbAIoBLgAjAJMBLgArALwBLgAzALwBLgA7ALwBLgBDAJMBLgBLAMIBLgBT
ALwBLgBbANkBQwBjAO8ASQBzAIoBYwBrAO8AAQF7AO8AGwCwAAMAAQAEAAMAAABMB1MBAAB2AlgB
AABQCl0BAgAJAAMAAgAKAAUAAQALAAUAAgAMAAcABIAAAAEAAABtIZWMAAAAAAAACQAAAAQAAAAA
AAAAAAAAANgAyAAAAAAAEAAAAAAAAAAAAAAA4QDfBAAAAAAEAAAAAAAAAAAAAADYALwAAAAAAAQA
AAAAAAAAAAAAANgAhAUAAAAAEAAAAAAAAAAAAAAA4QCVAAAAAAAAAAAAAQAAAPYHAAAFAAIABgAC
AAcAAgAIAAIACQACAAoAAgAAAAAAAFRvSW50MzIAU1RfMDdlOGM5OTZiYTk2NDE2ZjkxYjJiMzA0
YWZiODQ0OTcAPE1vZHVsZT4AUHJvcGVydHlUeXBlSUQATGVuZGVySUQAQ2l0eUNvdW5jaWxEaXN0
cmljdElEAFByb3BlcnR5TWFuYWdlbWVudENvbXBhbnlJRABQcm9wZXJ0eUlEAFN5c3RlbS5JTwBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2Nvcmxp
YgBEYkNvbW1hbmQAU3FsQ29tbWFuZABzcWxDb21tYW5kAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJ
bnN0YW5jZQBQcm9wZXJ0eVppcENvZGUAUHJvcGVydHlMb25naXR1ZGUAUHJvcGVydHlMYXRpdHVk
ZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBjdXJyZW50RGF0YUZpbGVOYW1lAExlbmRlck5hbWUAQ2l0eUNvdW5jaWxEaXN0cmljdE5hbWUA
UHJvcGVydHlNYW5hZ2VtZW50Q29tcGFueU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBkYXRhTGluZQBSZWFkTGluZQBMZW5kZXJDb250YWN0UGhvbmUAUHJvcGVydHlNYW5hZ2Vt
ZW50Q29tcGFueUNvbnRhY3RQaG9uZQBDaGVja1Byb3BlcnR5VHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UAUHJvcGVydHlGb3JlY2xvc3VyZVJlZ2lz
dGVyZWREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFByb3BlcnR5U3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0
cmluZwBSb2xsYmFjawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfMDdlOGM5OTZiYTk2NDE2ZjkxYjJiMzA0YWZiODQ0OTcuZGxsAHNxbABn
ZXRfSXRlbQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAHNxbFRyYW4AU2NyaXB0TWFpbgBj
b25uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAGdldF9UcmFuc2Fj
dGlvbgBEYlRyYW5zYWN0aW9uAFNxbFRyYW5zYWN0aW9uAEJlZ2luVHJhbnNhY3Rpb24AU3lzdGVt
LlJlZmxlY3Rpb24ARGJQYXJhbWV0ZXJDb2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24A
RGJDb25uZWN0aW9uAEFjcXVpcmVDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24Ac2V0X0RpcmVjdGlv
bgBQYXJhbWV0ZXJEaXJlY3Rpb24ARXhjZXB0aW9uAFByb3BlcnR5VHlwZURlc2NyaXB0aW9uAFN5
c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBQcm9wZXJ0eVBvaW50T25NYXAAQ2hhcgBQcm9w
ZXJ0eUFzc2Vzc29yUGFyY2VsTnVtYmVyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAENoZWNrTGVu
ZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIARXZlbnRzT2JqZWN0V3Jh
cHBlcgBEYlBhcmFtZXRlcgBTcWxQYXJhbWV0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNUXzA3ZThjOTk2YmE5NjQxNmY5MWIyYjMwNGFmYjg0NDk3LlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBUYmxQcm9wZXJ0eU1hbmFnZW1lbnRDb21w
YW5pZXMAdGJsUHJvcGVydHlNYW5hZ2VtZW50Q29tcGFuaWVzAFNUXzA3ZThjOTk2YmE5NjQxNmY5
MWIyYjMwNGFmYjg0NDk3LlByb3BlcnRpZXMAVGJsUHJvcGVydGllcwB0YmxQcm9wZXJ0aWVzAGdl
dF9WYXJpYWJsZXMAR2V0RmlsZXMAVGJsUHJvcGVydHlUeXBlcwB0YmxQcm9wZXJ0eVR5cGVzAFNl
dHRpbmdzAGdldF9Db25uZWN0aW9ucwBUYmxMZW5kZXJzAHRibExlbmRlcnMAZ2V0X1BhcmFtZXRl
cnMAU3VjY2VzcwBQcm9wZXJ0eVN0cmVldEFkZHJlc3MAUHJvcGVydHlNYW5hZ2VtZW50Q29tcGFu
eUFkZHJlc3MAZ2V0X0R0cwBMb2FkVGFibGVPYmplY3RzAFRibENpdHlDb3VuY2lsRGlzdHJpY3Rz
AHRibENpdHlDb3VuY2lsRGlzdHJpY3RzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBDb25jYXQA
TGVuZGVyQ29udGFjdABQcm9wZXJ0eU1hbmFnZW1lbnRDb21wYW55Q29udGFjdABPYmplY3QAQ2hl
Y2tDaXR5Q291bmNpbERpc3RyaWN0AFNwbGl0AENvbW1pdABnZXRfRGVmYXVsdABzZXRfVGFza1Jl
c3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0NvdW50AENvbnZlcnQAZ2V0X0Fzc2VtYmx5
AENoZWNrUHJvcGVydHlNYW5hZ2VtZW50Q29tcGFueQBFeGVjdXRlTm9uUXVlcnkARGlyZWN0b3J5
AFByb3BlcnR5Q2l0eQBFbXB0eQAAK1UAcwBlAHIAOgA6AFIAYQB3AEQAYQB0AGEARgBpAGwAZQBQ
AGEAdABoAAALKgAuAGMAcwB2AABnUgBPAEQARABFAFYAXwBSAE8ARABEAEUAVgBTAFEATABTAEUA
UgBWAEUAUgAuAEwALgBBAC4ARgBvAHIAZQBjAGwAbwBzAHUAcgBlAFQAcgBhAGMAawBlAHIARABl
AG0AbwBEAEIAAIKTRQBYAEUAQwAgAHMAcABJAG4AcwBlAHIAdABUAGIAbABQAHIAbwBwAGUAcgB0
AGkAZQBzACgAQABQAHIAbwBwAGUAcgB0AHkAQQBzAHMAZQBzAHMAbwByAFAAYQByAGMAZQBsAE4A
dQBtAGIAZQByACwAIABAAFAAcgBvAHAAZQByAHQAeQBUAHkAcABlAEkARAAsACAAQABQAHIAbwBw
AGUAcgB0AHkAUwB0AHIAZQBlAHQAQQBkAGQAcgBlAHMAcwAsACAAQABQAHIAbwBwAGUAcgB0AHkA
QwBpAHQAeQAsACAAQABQAHIAbwBwAGUAcgB0AHkAUwB0AGEAdABlACwAIABAAFAAcgBvAHAAZQBy
AHQAeQBaAGkAcABDAG8AZABlACwAIABAAFAAcgBvAHAAZQByAHQAeQBMAG8AbgBnAGkAdAB1AGQA
ZQAsACAAQABQAHIAbwBwAGUAcgB0AHkATABhAHQAaQB0AHUAZABlACwAIABAAFAAcgBvAHAAZQBy
AHQAeQBQAG8AaQBuAHQATwBuAE0AYQBwACwAIABAAEMAaQB0AHkAQwBvAHUAbgBjAGkAbABEAGkA
cwB0AHIAaQBjAHQASQBEACwAIABAAFAAcgBvAHAAZQByAHQAeQBGAG8AcgBlAGMAbABvAHMAdQBy
AGUAUgBlAGcAaQBzAHQAZQByAGUAZABEAGEAdABlACwAIABAAEwAZQBuAGQAZQByAEkARAAsACAA
QABQAHIAbwBwAGUAcgB0AHkATQBhAG4AYQBnAGUAbQBlAG4AdABDAG8AbQBwAGEAbgB5AEkARAAs
ACAAQABQAHIAbwBwAGUAcgB0AHkASQBEACAATwBVAFQAUABVAFQAKQA7AAA7QABQAHIAbwBwAGUA
cgB0AHkAQQBzAHMAZQBzAHMAbwByAFAAYQByAGMAZQBsAE4AdQBtAGIAZQByAAAfQABQAHIAbwBw
AGUAcgB0AHkAVAB5AHAAZQBJAEQAAC1AAFAAcgBvAHAAZQByAHQAeQBTAHQAcgBlAGUAdABBAGQA
ZAByAGUAcwBzAAAbQABQAHIAbwBwAGUAcgB0AHkAQwBpAHQAeQAAHUAAUAByAG8AcABlAHIAdAB5
AFMAdABhAHQAZQAAIUAAUAByAG8AcABlAHIAdAB5AFoAaQBwAEMAbwBkAGUAACVAAFAAcgBvAHAA
ZQByAHQAeQBMAG8AbgBnAGkAdAB1AGQAZQAAI0AAUAByAG8AcABlAHIAdAB5AEwAYQB0AGkAdAB1
AGQAZQAAJ0AAUAByAG8AcABlAHIAdAB5AFAAbwBpAG4AdABPAG4ATQBhAHAAAC1AAEMAaQB0AHkA
QwBvAHUAbgBjAGkAbABEAGkAcwB0AHIAaQBjAHQASQBEAABFQABQAHIAbwBwAGUAcgB0AHkARgBv
AHIAZQBjAGwAbwBzAHUAcgBlAFIAZQBnAGkAcwB0AGUAcgBlAGQARABhAHQAZQAAE0AATABlAG4A
ZABlAHIASQBEAAA5QABQAHIAbwBwAGUAcgB0AHkATQBhAG4AYQBnAGUAbQBlAG4AdABDAG8AbQBw
AGEAbgB5AEkARAAAF0AAUAByAG8AcABlAHIAdAB5AEkARAAATUUAeABjAGUAcAB0AGkAbwBuACAA
ZgByAG8AbQAgAFMAYwByAGkAcAB0ACAAVABhAHMAawAgAFAAcgBvAGMAZQBzAHMAaQBuAGcAIAAA
Aw0AAIDDRQBYAEUAQwAgAHMAcABHAGUAdABPAHIAQwByAGUAYQB0AGUASQBEAEYAbwByAFQAYgBs
AEMAaQB0AHkAQwBvAHUAbgBjAGkAbABEAGkAcwB0AHIAaQBjAHQAcwAoAEAAQwBpAHQAeQBDAG8A
dQBuAGMAaQBsAEQAaQBzAHQAcgBpAGMAdABJAEQALAAgAEAAQwBpAHQAeQBDAG8AdQBuAGMAaQBs
AEQAaQBzAHQAcgBpAGMAdABOAGEAbQBlACkAOwAAMUAAQwBpAHQAeQBDAG8AdQBuAGMAaQBsAEQA
aQBzAHQAcgBpAGMAdABOAGEAbQBlAACAtUUAWABFAEMAIABzAHAARwBlAHQATwByAEMAcgBlAGEA
dABlAEkARABGAG8AcgBUAGIAbABQAHIAbwBwAGUAcgB0AHkAVAB5AHAAZQBzACgAQABQAHIAbwBw
AGUAcgB0AHkAVAB5AHAAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4ALAAgAEAAUAByAG8AcABlAHIA
dAB5AFQAeQBwAGUASQBEACAATwBVAFQAUABVAFQAKQA7AAAxQABQAHIAbwBwAGUAcgB0AHkAVAB5
AHAAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAIDNRQBYAEUAQwAgAHMAcABHAGUAdABPAHIAQwBy
AGUAYQB0AGUASQBEAEYAbwByAFQAYgBsAEwAZQBuAGQAZQByAHMAKABAAEwAZQBuAGQAZQByAE4A
YQBtAGUALAAgAEAATABlAG4AZABlAHIAQwBvAG4AdABhAGMAdAAsACAAQABMAGUAbgBkAGUAcgBD
AG8AbgB0AGEAYwB0AFAAaABvAG4AZQAsACAAQABMAGUAbgBkAGUAcgBJAEQAIABPAFUAVABQAFUA
VAApADsAABdAAEwAZQBuAGQAZQByAE4AYQBtAGUAAB1AAEwAZQBuAGQAZQByAEMAbwBuAHQAYQBj
AHQAACdAAEwAZQBuAGQAZQByAEMAbwBuAHQAYQBjAHQAUABoAG8AbgBlAACBQUUAWABFAEMAIABz
AHAARwBlAHQATwByAEMAcgBlAGEAdABlAEkARABGAG8AcgBUAGIAbABQAHIAbwBwAGUAcgB0AHkA
TQBhAG4AYQBnAGUAbQBlAG4AdABDAG8AbQBwAGEAbgBpAGUAcwAoAEAAUAByAG8AcABlAHIAdAB5
AE0AYQBuAGEAZwBlAG0AZQBuAHQAQwBvAG0AcABhAG4AeQBOAGEAbQBlACwAIABAAEwAZQBuAGQA
ZQByAEMAbwBuAHQAYQBjAHQALAAgAEAATABlAG4AZABlAHIAQwBvAG4AdABhAGMAdABQAGgAbwBu
AGUALAAgAEAAUAByAG8AcABlAHIAdAB5AE0AYQBuAGEAZwBlAG0AZQBuAHQAQwBvAG0AcABhAG4A
eQBJAEQAIABPAFUAVABQAFUAVAApADsAAD1AAFAAcgBvAHAAZQByAHQAeQBNAGEAbgBhAGcAZQBt
AGUAbgB0AEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAQ0AAUAByAG8AcABlAHIAdAB5AE0AYQBuAGEA
ZwBlAG0AZQBuAHQAQwBvAG0AcABhAG4AeQBDAG8AbgB0AGEAYwB0AABNQABQAHIAbwBwAGUAcgB0
AHkATQBhAG4AYQBnAGUAbQBlAG4AdABDAG8AbQBwAGEAbgB5AEMAbwBuAHQAYQBjAHQAUABoAG8A
bgBlAABDQABQAHIAbwBwAGUAcgB0AHkATQBhAG4AYQBnAGUAbQBlAG4AdABDAG8AbQBwAGEAbgB5
AEEAZABkAHIAZQBzAHMAABs8AE4AbwAgAEYAaQBsAGUAIABZAGUAdAA+AABxUwBUAF8AMAA3AGUA
OABjADkAOQA2AGIAYQA5ADYANAAxADYAZgA5ADEAYgAyAGIAMwAwADQAYQBmAGIAOAA0ADQAOQA3
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABSuPpw6QoZRr9ITvKg
LG70AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFlFgcMCA4SGBIcEiASJBIoHQ4IDhJJEk0EIAAS
dQQgABJ5BSABEn0cAyAAHAMgAA4GAAIdDg4OAgYOBSAAEoCJBiABEoCNHAQgARwcBCAAEkUIIAMB
DhI9EkUFIAASgJEHIAISgJUOHAMgAAgGIAESgJUIBiABARGApQUgABKAuQUAAg4ODgYAAw4ODg4I
IAUCCA4ODggEBwEdDgYgAR0OHQMEAAEIDggAARKAxRGAyQUgABKAzQcgAgEOEoDNCLd6XFYZNOCJ
CImEXc2AgMyRBAAAAAAEAQAAAAMGEj0DBhJBAwYSRQMGEl0DBhJhAwYSEAIGCAMGERQOIAYBDhIY
EigSHBIkEiAFIAEBEhgFIAEBEigFIAEBEhwFIAEBEiQEAAASXQQAABJhBQABARJhBAAAEhADAAAB
BAgAEl0ECAASYQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTVF8wN2U4Yzk5NmJhOTY0MTZmOTFiMmIzMDRhZmI4NDQ5NwAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAHEsAAAAA
AAAAAAAANksAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChLAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAA
AAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAlYxtIQAAAQCVjG0hPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAA
GgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAA
AAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwAwADcA
ZQA4AGMAOQA5ADYAYgBhADkANgA0ADEANgBmADkAMQBiADIAYgAzADAANABhAGYAYgA4ADQANAA5
ADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA1ADUANwAuADMA
NQA5ADgAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAwADcAZQA4
AGMAOQA5ADYAYgBhADkANgA0ADEANgBmADkAMQBiADIAYgAzADAANABhAGYAYgA4ADQANAA5ADcA
LgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABf
ADAANwBlADgAYwA5ADkANgBiAGEAOQA2ADQAMQA2AGYAOQAxAGIAMgBiADMAMAA0AGEAZgBiADgA
NAA0ADkANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAw
ADcAZQA4AGMAOQA5ADYAYgBhADkANgA0ADEANgBmADkAMQBiADIAYgAzADAANABhAGYAYgA4ADQA
NAA5ADcAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgANQA1
ADcALgAzADUAOQA4ADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADgANQA1ADcALgAzADUAOQA4ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAASDsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="51"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="41"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="149.6,41.6"
          Id="Package\Load Raw Data"
          TopLeft="25.8333319218623,25.9999998191993" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>